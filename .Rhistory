library(LiDARtools)
library(LiDARtools)
source("E:/packages_general/WoLi/var_merge.R")
source("E:/packages_general/LiDARtools/var_merge.R")
source("E:/packages_general/LiDARtools/R/var_merge.R")
# Description:
# Author: Alice Ziegler
# Date: 2017-10-16 16:13:38
########################################################################################
###Documentation
########################################################################################
#package would nee following libraries:
# library(rPointDB)
# library(dplyr)
# library(pls)
########################################################################################
########################################################################################
rm(list=ls())
########################################################################################
###Settings
########################################################################################
dat_path <- "E:/Projekte/Kili/data/"
r_pnts <- 10
d_rst <- 50
db_layers <- c("kili", "kili2")
db <- "http://192.168.191.183:8081"
db_login <- "user:password"
tec_crdnt <- read.csv(paste0(dat_path,"tec_crdnt.csv"), header=T, sep=",")
location <- unique(tec_crdnt[, c("plotID", "x_pnt", "y_pnt")])
rst_type <- c("chm")
group_name <- "kili"
gap_hght <- 10
gap_sze <- 9
pnts_path <- paste0("points_", r_pnts, "m.RData")
chm_path <- paste0(dat_path, "raster_db_", d_rst, "m/", rst_type[1], "/")
ldr_str_pnts_path <- "ldr_str_pnts"
ldr_str_chm_path <- "ldr_str_chm"
dat_SR_path <- "dat_SR"
lst_vars_path <- c(ldr_str_pnts_path, ldr_str_chm_path, dat_SR_path)
var_merge(dat_path = dat_path, lst_vars_path = lst_vars_path)
lst_vars_path
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}}
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}}
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
View(result)
colnames(result)
load (paste0(dat_path,lst_vars_path[1],".RData"))
View(dat_SR)
View(ldr_str_chm)
View(ldr_str_pnts)
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
View(result)
lst_vars_path <- c(dat_SR_path, ldr_str_pnts_path, ldr_str_chm_path)
View(tmp)
View(tmp)
View(result)
merge(result,tmp,by.x="plotID",by.y="plotID")
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
var_merge <- function(dat_path, lst_vars_path){
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
}
View(result)
View(tmp)
a <- merge(result,tmp,by.x="plotID",by.y="plotID")
View(a)
View(tmp)
View(result)
var_merge <- function(dat_path, lst_vars_path){
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
colnames(result#)
colnames(result)
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
colnames(results)
colnames(result)
library(LiDARtools)
install.packages("gam")
library(LiDARtools)
