library(LiDARtools)
library(LiDARtools)
source("E:/packages_general/WoLi/var_merge.R")
source("E:/packages_general/LiDARtools/var_merge.R")
source("E:/packages_general/LiDARtools/R/var_merge.R")
# Description:
# Author: Alice Ziegler
# Date: 2017-10-16 16:13:38
########################################################################################
###Documentation
########################################################################################
#package would nee following libraries:
# library(rPointDB)
# library(dplyr)
# library(pls)
########################################################################################
########################################################################################
rm(list=ls())
########################################################################################
###Settings
########################################################################################
dat_path <- "E:/Projekte/Kili/data/"
r_pnts <- 10
d_rst <- 50
db_layers <- c("kili", "kili2")
db <- "http://192.168.191.183:8081"
db_login <- "user:password"
tec_crdnt <- read.csv(paste0(dat_path,"tec_crdnt.csv"), header=T, sep=",")
location <- unique(tec_crdnt[, c("plotID", "x_pnt", "y_pnt")])
rst_type <- c("chm")
group_name <- "kili"
gap_hght <- 10
gap_sze <- 9
pnts_path <- paste0("points_", r_pnts, "m.RData")
chm_path <- paste0(dat_path, "raster_db_", d_rst, "m/", rst_type[1], "/")
ldr_str_pnts_path <- "ldr_str_pnts"
ldr_str_chm_path <- "ldr_str_chm"
dat_SR_path <- "dat_SR"
lst_vars_path <- c(ldr_str_pnts_path, ldr_str_chm_path, dat_SR_path)
var_merge(dat_path = dat_path, lst_vars_path = lst_vars_path)
lst_vars_path
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}}
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}}
for (i in 1:length(lst_vars_path)){
tmp <- get (load (paste0(dat_path,lst_vars_path[i],".RData")))
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
View(result)
colnames(result)
load (paste0(dat_path,lst_vars_path[1],".RData"))
View(dat_SR)
View(ldr_str_chm)
View(ldr_str_pnts)
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
View(result)
lst_vars_path <- c(dat_SR_path, ldr_str_pnts_path, ldr_str_chm_path)
View(tmp)
View(tmp)
View(result)
merge(result,tmp,by.x="plotID",by.y="plotID")
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
var_merge <- function(dat_path, lst_vars_path){
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
}
View(result)
View(tmp)
a <- merge(result,tmp,by.x="plotID",by.y="plotID")
View(a)
View(tmp)
View(result)
var_merge <- function(dat_path, lst_vars_path){
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
colnames(result#)
colnames(result)
for (i in 1:length(lst_vars_path)){
tmp <- get(load(paste0(dat_path,lst_vars_path[i],".RData")))
print(i)
if(i==1){
result <- tmp
}else{
result <- merge(result,tmp,by.x="plotID",by.y="plotID")
}
}
colnames(results)
colnames(result)
library(LiDARtools)
install.packages("gam")
library(LiDARtools)
library(LiDARtools)
library(LiDARtools)
rm(list=ls())
library(LiDARtools)
dat_path2 <- "E:/Projekte/Kili/data/"
dat_path2 <- "/media/hanna/data/Projekte/Kili/data/"
d_rst <- 50
rst_type <- c("chm")
group_name <- "kili"
chm_path2 <- paste0(dat_path2, "raster_db_", d_rst, "m/", rst_type[1], "/")
gap_fraction(dat_path = dat_path2, chm_path = chm_path2)
gap_fraction(dat_path = dat_path2, chm_path = chm_path2)
dat_path = dat_path2
chm_path = chm_path2
require(raster)
require(rgdal)
chm_lst <- list.files(chm_path)
gap_frac_all <- lapply(chm_lst, function(i){
chm <- raster::raster(paste0(chm_path, i))
raster::values(chm)[raster::values(chm) < gap_hght] <- NA
raster::values(chm)[is.finite(raster::values(chm))] <- 0
raster::values(chm)[is.na(raster::values(chm))] <- 1
clmp <- raster::clump(chm, directions = 8, gaps = F)
frq<-raster::as.data.frame(raster::freq(clmp))
excludeID <- frq$value[which(frq$count <= gap_sze)]
sieve <- clmp
sieve[values(clmp) %in% excludeID] <- NA
total_count <- length(raster::values(sieve))
clear_count <- sum(is.finite(raster::values(sieve)))
cover_count <- sum(is.na(raster::values(sieve)))
gap_frac_plt <- clear_count / total_count
return(list(substr(i,1,4), gap_frac_plt))
})
gap_frac <- raster::as.data.frame(do.call(rbind, gap_frac_all))
colnames(gap_frac) <- c("plotID", "gap_frac")
gap_frac
chm <- raster::raster(paste0(chm_path, i))
i <- 1
chm <- raster::raster(paste0(chm_path, i))
chm_lst[1]
chm_lst
chm_lst <- list.files(chm_path)
i <- chm_lst[1]
i
chm_lst <- list.files(chm_path)
chm_path
dat_path2 <- "E:/Projekte/Kili/data/"
gap_fraction(dat_path = dat_path2, chm_path = chm_path2)
chm_lst <- list.files(chm_path)
i <- chm_lst[1]
i
chm_lst <- list.files(chm_path)
chm_path
chm_path = chm_path2
i <- chm_lst[1]
chm_lst <- list.files(chm_path)
chm_path
dat_path2 <- "E:/Projekte/Kili/data/"
chm_path2 <- paste0(dat_path2, "raster_db_", d_rst, "m/", rst_type[1], "/")
chm_path = chm_path2
chm_path
i <- chm_lst[1]
chm_lst <- list.files(chm_path)
i <- chm_lst[1]
i
chm <- raster::raster(paste0(chm_path, i))
chm
raster::values(chm)[raster::values(chm) < gap_hght] <- NA
gap_hght = 10
gap_sze = 9
raster::values(chm)[raster::values(chm) < gap_hght] <- NA
raster::values(chm)[is.finite(raster::values(chm))] <- 0
raster::values(chm)[is.na(raster::values(chm))] <- 1
clmp <- raster::clump(chm, directions = 8, gaps = F)
frq<-raster::as.data.frame(raster::freq(clmp))
excludeID <- frq$value[which(frq$count <= gap_sze)]
sieve <- clmp
sieve[clmp %in% excludeID] <- NA
sieve
plot(sieve)
sieve <- clmp
plot(sieve)
clmp
excludeID
excludeID <- frq$value[which(frq$count <= gap_sze)]
excludeID
sieve[excludeID %in% clmp] <- NA
sieve[excludeID %in% clmp] <- NA
sieve
sieve[values(clmp) %in% excludeID] <- NA
sieve[values(clmp) %in% excludeID] <- NA
total_count <- length(raster::values(sieve))
clear_count <- sum(is.finite(raster::values(sieve)))
cover_count <- sum(is.na(raster::values(sieve)))
gap_frac_plt <- clear_count / total_count
return(list(substr(i,1,4), gap_frac_plt))
gap_frac <- raster::as.data.frame(do.call(rbind, gap_frac_all))
colnames(gap_frac) <- c("plotID", "gap_frac")
gap_frac
gap_frac
library(LiDARtools)
rm(list=ls())
########################################################################################
###Settings
########################################################################################
library(LiDARtools)
dat_path2 <- "E:/Projekte/Kili/data/"
#dat_path2 <- "/media/hanna/data/Projekte/Kili/data/"
d_rst <- 50
rst_type <- c("chm")
group_name <- "kili"
#gap_hght <- 10
#gap_sze <- 9
########
chm_path2 <- paste0(dat_path2, "raster_db_", d_rst, "m/", rst_type[1], "/")
gap_fraction(dat_path = dat_path2, chm_path = chm_path2)
library(LiDARtools)
